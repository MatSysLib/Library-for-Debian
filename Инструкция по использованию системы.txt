Архив содержит каталоги, исходные коды, настройки программы emacs и инструкции.

В каталоге NumLib находятся папки с исходными кодами библиотеки параллельных алгоритмов численного анализа. Данный каталог предназначен для сборки библиотеки.

В каталоге Plot находятся папки с исходными кодами библиотеки для вывода графики. Данный каталог предназначен для сборки библиотеки.

В каталоге .emacs.d и файле .emacs находятся настройки программы Emacs оптимизированные под данные библиотеки.

Файл Setup.sh предназначен для установки всей системы.

Чтобы установить систему необходимо запустить с правами администратора файл setup.sh.
Выберите язык, который будет использоваться при установке скрипта.
Затем необходимо будет указать пользователя, которому следует установить систему, для корректного копирования файлов библиотек.
После установки необходим перезапуск терминала или exec bash.

После чего система установит все необходимое на компьютер, соберет библиотеку численного анализа и библиотеку вывода графики, переместит необходимые файлы в папку $HOME/.local/share/Library/ для дальнейшего использования, а также настроит программу emacs.

Для запуска программы вводим в консоли: emacs (используется для запуска с GUI) или emacs -nv (для запуска консольной версии).

Чтобы закрыть программу используется сочетание клавиш Control-x Control-c. 

Открытие файла Control-x Control-f. Так же можно использовать файловый менеджер SpeedBar, для этого необходимо нажать F12, после чего переключиться в открывшееся окно: Control-x o. После чего выбираем файл, и закрываем окно с помощью F12.

Сохранение файла на диске Control-x Control-s.
Сохранение файла с новым именем Control-x Control-s.

Для того, чтобы посмотреть список недавно открытых файлов необходимо нажать F9.

Отобразить список открытых буферов в новом окне Control-x Control-b или F2.
Переключиться в другой буфер в текущем окне Control-x b.

Прервать частично набранную или исполняемую команду: Control-g

Отменить последнюю операцию: Control-x u

Для удобства работы с программой были добавлены функции,чтобы упростить запуск и компиляцию программы, а также для упрощения работы с библиотеками.

Чтобы скомпилировать программу, написанную на языке Fortran, пользователю необходимо нажать клавишу F5 (F6 для C) или перейти во вкладку Build->Compile Fortran (Compile C).
Для удобства использования библиотеки параллельных алгоритмов численного анализа нужно использовать Control-F5 или Library->Compile.(В строке компиляции будет прописаны необходимые библиотеки и пути для работы с ними)
Для использования библиотеки отображения графики: F7 или Plotter->Compile. 
Для того, чтобы пользоваться и математической и графической библиотекой сразу: Control-F7.

Чтобы разослать копии скомпилированной программы на узлы кластера, то необходимо нажать сочетание Control-F9, если отправка происходит с узла кластера, или Control-F10, если отправка происходит с локального компьютера пользователя.

Для запуска программы необходимо нажать сочетание F4 или Build->Run. После пользователю будет предложена строка со свойствами компиляции, которые можно изменить. Имя запускаемой программы будет взято из названия, открытого в активном окне буфере, но это имя можно изменить.
Чтобы запустить программу на кластере необходимо создать файл hosts, прописать в него необходимые узлы и сохранить его рядом с файлом исходного кода. Затем можно будет использовать сочетание клавиш Control-F4.
Для запуска программы с использованием библиотеки для вывода графики: F8 или Plotter->Run.


Чтобы использовать этот интерфейс для отладки GDB, используется команду M-x gdb в Emacs. В качестве аргумента задайте выполняемый файл, который необходимо отладить. Эта команда вызывает GDB как подпроцесс Emacs с вводом и выводом через заново созданный буфер.
В буфере ввода-вывода GDB, можно использовать следующие специальные команды Emacs в дополнение к стандартным командам режима оболочки:
    • Control-h m – описывает возможности режима GDB Emacs;
    • Alt-s – выполнить до другой строки исходного текста; также обновляет окно отображения для показа текущего файла и положения в нем;
    • Alt-n – выполнить до следующей строки исходного текста в этой функции, пропуская все вызовы функций, подобно команде GDB next. Затем обновить окно отображения, чтобы показать текущий файл и положение в нем;
    • Alt-i – выполнить одну инструкцию, подобно команде GDB stepi; обновляет окно отображения;
    • Alt-x gdb-nexti – выполнить до следующей инструкции, используя команду GDB nexti; обновляет окно отображения;
    • Control-c Control-f – выполнить до выхода из выбранного кадра стека, подобно команде GDB finish;
    • Alt-c – продолжить выполнение вашей программы, подобно команде GDB continue;
    • Alt-u – подняться вверх по стеку на число кадров, заданное числовым параметром; 
    • Alt-d – спуститься вниз по стеку на число кадров, заданное числовым параметром;
    • Control-x & – прочитать число в позиции курсора и вставить его в конец буфера ввода-вывода GDB.
